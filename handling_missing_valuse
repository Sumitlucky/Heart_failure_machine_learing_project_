{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN+Tz6e5NuWJ/1tNNYE5uzq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"id":"JKwqbaHhNnsL","executionInfo":{"status":"ok","timestamp":1761370542695,"user_tz":-330,"elapsed":506,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}}},"outputs":[],"source":["import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["dataset = pd.read_csv('/content/heart_failure_dataset.zip')\n","dataset.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"dd4lOMM2N4NA","executionInfo":{"status":"ok","timestamp":1761370555554,"user_tz":-330,"elapsed":134,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"74c1371f-9ae1-49e0-aa61-4bef03b438c4"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  MaxHR  \\\n","0   40   M           ATA        140          289          0     Normal    172   \n","1   49   F           NAP        160          180          0     Normal    156   \n","2   37   M           ATA        130          283          0         ST     98   \n","3   48   F           ASY        138          214          0     Normal    108   \n","4   54   M           NAP        150          195          0     Normal    122   \n","\n","  ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n","0              N      0.0       Up             0  \n","1              N      1.0     Flat             1  \n","2              N      0.0       Up             0  \n","3              Y      1.5     Flat             1  \n","4              N      0.0       Up             0  "],"text/html":["\n","  <div id=\"df-247d19b2-f706-49f5-b50f-2370ebea0eb6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>ChestPainType</th>\n","      <th>RestingBP</th>\n","      <th>Cholesterol</th>\n","      <th>FastingBS</th>\n","      <th>RestingECG</th>\n","      <th>MaxHR</th>\n","      <th>ExerciseAngina</th>\n","      <th>Oldpeak</th>\n","      <th>ST_Slope</th>\n","      <th>HeartDisease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>40</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","      <td>172</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>F</td>\n","      <td>NAP</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","      <td>156</td>\n","      <td>N</td>\n","      <td>1.0</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>0</td>\n","      <td>ST</td>\n","      <td>98</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>48</td>\n","      <td>F</td>\n","      <td>ASY</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","      <td>108</td>\n","      <td>Y</td>\n","      <td>1.5</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>54</td>\n","      <td>M</td>\n","      <td>NAP</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","      <td>122</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-247d19b2-f706-49f5-b50f-2370ebea0eb6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-247d19b2-f706-49f5-b50f-2370ebea0eb6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-247d19b2-f706-49f5-b50f-2370ebea0eb6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c2fbdb96-9299-424c-8e54-8217828b570a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2fbdb96-9299-424c-8e54-8217828b570a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c2fbdb96-9299-424c-8e54-8217828b570a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 918,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"NAP\",\n          \"TA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          165,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 109,\n        \"min\": 0,\n        \"max\": 603,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          305,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FastingBS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingECG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Normal\",\n          \"ST\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxHR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ExerciseAngina\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Y\",\n          \"N\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0665701510493233,\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST_Slope\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Up\",\n          \"Flat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HeartDisease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["dataset.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7dbaSqXQN4QW","executionInfo":{"status":"ok","timestamp":1761370558268,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"40953132-fb2b-4317-b0c9-c8dede59771a"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(918, 12)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["dataset.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6GxfueH_QRjP","executionInfo":{"status":"ok","timestamp":1761370558819,"user_tz":-330,"elapsed":29,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"4228034a-538d-4a2c-acf6-d5a5d96108dc"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(918, 12)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["dataset.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"zvWpaqLuN4TJ","executionInfo":{"status":"ok","timestamp":1761370559640,"user_tz":-330,"elapsed":20,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"eb3bf9dd-fc03-45a4-c05b-0dbf46abd943"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Age               0\n","Sex               0\n","ChestPainType     0\n","RestingBP         0\n","Cholesterol       0\n","FastingBS         0\n","RestingECG        0\n","MaxHR             0\n","ExerciseAngina    0\n","Oldpeak           0\n","ST_Slope          0\n","HeartDisease      0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ChestPainType</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>RestingBP</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cholesterol</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FastingBS</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>RestingECG</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>MaxHR</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ExerciseAngina</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Oldpeak</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ST_Slope</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>HeartDisease</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["sns.heatmap(dataset.isnull())\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":529},"id":"q15kSH9wN4Wd","executionInfo":{"status":"ok","timestamp":1761370561981,"user_tz":-330,"elapsed":631,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"472714af-345e-4daa-ae57-a61d17270c22"},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# data delete process columb wise and rowwise"],"metadata":{"id":"4xcW0jdpPUEg","executionInfo":{"status":"ok","timestamp":1761370562842,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["dataset.drop(columns=[\"FastingBS\"],inplace=True)"],"metadata":{"id":"bDr7YwAaPUHW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataset.dropna(inplace=True)\n"],"metadata":{"id":"8CQ87AidPULf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataset.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"oWXRCXAAPUOA","executionInfo":{"status":"ok","timestamp":1761370563874,"user_tz":-330,"elapsed":38,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"8080ca5f-e8e7-4203-c16d-c6825c96c064"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Age               0\n","Sex               0\n","ChestPainType     0\n","RestingBP         0\n","Cholesterol       0\n","FastingBS         0\n","RestingECG        0\n","MaxHR             0\n","ExerciseAngina    0\n","Oldpeak           0\n","ST_Slope          0\n","HeartDisease      0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ChestPainType</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>RestingBP</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cholesterol</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FastingBS</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>RestingECG</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>MaxHR</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ExerciseAngina</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Oldpeak</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ST_Slope</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>HeartDisease</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["dataset.fillna(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"6mLioU5YPUQf","executionInfo":{"status":"ok","timestamp":1761364441531,"user_tz":-330,"elapsed":71,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"4a817ed2-e76b-49ee-bef4-3303ee862f1c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Age Sex ChestPainType  RestingBP  Cholesterol RestingECG  MaxHR  \\\n","0     40   M           ATA        140          289     Normal    172   \n","1     49   F           NAP        160          180     Normal    156   \n","2     37   M           ATA        130          283         ST     98   \n","3     48   F           ASY        138          214     Normal    108   \n","4     54   M           NAP        150          195     Normal    122   \n","..   ...  ..           ...        ...          ...        ...    ...   \n","913   45   M            TA        110          264     Normal    132   \n","914   68   M           ASY        144          193     Normal    141   \n","915   57   M           ASY        130          131     Normal    115   \n","916   57   F           ATA        130          236        LVH    174   \n","917   38   M           NAP        138          175     Normal    173   \n","\n","    ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n","0                N      0.0       Up             0  \n","1                N      1.0     Flat             1  \n","2                N      0.0       Up             0  \n","3                Y      1.5     Flat             1  \n","4                N      0.0       Up             0  \n","..             ...      ...      ...           ...  \n","913              N      1.2     Flat             1  \n","914              N      3.4     Flat             1  \n","915              Y      1.2     Flat             1  \n","916              N      0.0     Flat             1  \n","917              N      0.0       Up             0  \n","\n","[918 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-1d9df7d1-40bb-43ef-9cc4-1f10e5acbf13\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>ChestPainType</th>\n","      <th>RestingBP</th>\n","      <th>Cholesterol</th>\n","      <th>RestingECG</th>\n","      <th>MaxHR</th>\n","      <th>ExerciseAngina</th>\n","      <th>Oldpeak</th>\n","      <th>ST_Slope</th>\n","      <th>HeartDisease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>40</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>Normal</td>\n","      <td>172</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>F</td>\n","      <td>NAP</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>Normal</td>\n","      <td>156</td>\n","      <td>N</td>\n","      <td>1.0</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>ST</td>\n","      <td>98</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>48</td>\n","      <td>F</td>\n","      <td>ASY</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>Normal</td>\n","      <td>108</td>\n","      <td>Y</td>\n","      <td>1.5</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>54</td>\n","      <td>M</td>\n","      <td>NAP</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>Normal</td>\n","      <td>122</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>913</th>\n","      <td>45</td>\n","      <td>M</td>\n","      <td>TA</td>\n","      <td>110</td>\n","      <td>264</td>\n","      <td>Normal</td>\n","      <td>132</td>\n","      <td>N</td>\n","      <td>1.2</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>914</th>\n","      <td>68</td>\n","      <td>M</td>\n","      <td>ASY</td>\n","      <td>144</td>\n","      <td>193</td>\n","      <td>Normal</td>\n","      <td>141</td>\n","      <td>N</td>\n","      <td>3.4</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>915</th>\n","      <td>57</td>\n","      <td>M</td>\n","      <td>ASY</td>\n","      <td>130</td>\n","      <td>131</td>\n","      <td>Normal</td>\n","      <td>115</td>\n","      <td>Y</td>\n","      <td>1.2</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>916</th>\n","      <td>57</td>\n","      <td>F</td>\n","      <td>ATA</td>\n","      <td>130</td>\n","      <td>236</td>\n","      <td>LVH</td>\n","      <td>174</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>917</th>\n","      <td>38</td>\n","      <td>M</td>\n","      <td>NAP</td>\n","      <td>138</td>\n","      <td>175</td>\n","      <td>Normal</td>\n","      <td>173</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>918 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d9df7d1-40bb-43ef-9cc4-1f10e5acbf13')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1d9df7d1-40bb-43ef-9cc4-1f10e5acbf13 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1d9df7d1-40bb-43ef-9cc4-1f10e5acbf13');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-83c4f094-fe24-4eb9-9316-e8842f538c30\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83c4f094-fe24-4eb9-9316-e8842f538c30')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-83c4f094-fe24-4eb9-9316-e8842f538c30 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 918,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"NAP\",\n          \"TA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          165,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 109,\n        \"min\": 0,\n        \"max\": 603,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          305,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingECG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Normal\",\n          \"ST\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxHR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ExerciseAngina\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Y\",\n          \"N\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0665701510493233,\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST_Slope\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Up\",\n          \"Flat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HeartDisease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["dataset.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DVU_pk71PUTu","executionInfo":{"status":"ok","timestamp":1761364445781,"user_tz":-330,"elapsed":22,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"6fd6ae4d-4b42-4fd1-beac-1c5e9fa98a4f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 918 entries, 0 to 917\n","Data columns (total 11 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   Age             918 non-null    int64  \n"," 1   Sex             918 non-null    object \n"," 2   ChestPainType   918 non-null    object \n"," 3   RestingBP       918 non-null    int64  \n"," 4   Cholesterol     918 non-null    int64  \n"," 5   RestingECG      918 non-null    object \n"," 6   MaxHR           918 non-null    int64  \n"," 7   ExerciseAngina  918 non-null    object \n"," 8   Oldpeak         918 non-null    float64\n"," 9   ST_Slope        918 non-null    object \n"," 10  HeartDisease    918 non-null    int64  \n","dtypes: float64(1), int64(5), object(5)\n","memory usage: 79.0+ KB\n"]}]},{"cell_type":"code","source":["dataset.fillna(method=\"bfill\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"ZAF4KxfNUppR","executionInfo":{"status":"ok","timestamp":1761364448054,"user_tz":-330,"elapsed":73,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"24d10c45-8d2a-41b9-9c68-a935c986fa5a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-193979722.py:1: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  dataset.fillna(method=\"bfill\")\n"]},{"output_type":"execute_result","data":{"text/plain":["     Age Sex ChestPainType  RestingBP  Cholesterol RestingECG  MaxHR  \\\n","0     40   M           ATA        140          289     Normal    172   \n","1     49   F           NAP        160          180     Normal    156   \n","2     37   M           ATA        130          283         ST     98   \n","3     48   F           ASY        138          214     Normal    108   \n","4     54   M           NAP        150          195     Normal    122   \n","..   ...  ..           ...        ...          ...        ...    ...   \n","913   45   M            TA        110          264     Normal    132   \n","914   68   M           ASY        144          193     Normal    141   \n","915   57   M           ASY        130          131     Normal    115   \n","916   57   F           ATA        130          236        LVH    174   \n","917   38   M           NAP        138          175     Normal    173   \n","\n","    ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n","0                N      0.0       Up             0  \n","1                N      1.0     Flat             1  \n","2                N      0.0       Up             0  \n","3                Y      1.5     Flat             1  \n","4                N      0.0       Up             0  \n","..             ...      ...      ...           ...  \n","913              N      1.2     Flat             1  \n","914              N      3.4     Flat             1  \n","915              Y      1.2     Flat             1  \n","916              N      0.0     Flat             1  \n","917              N      0.0       Up             0  \n","\n","[918 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-513f8c00-a2ee-4d70-b887-1970f5c1a198\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>ChestPainType</th>\n","      <th>RestingBP</th>\n","      <th>Cholesterol</th>\n","      <th>RestingECG</th>\n","      <th>MaxHR</th>\n","      <th>ExerciseAngina</th>\n","      <th>Oldpeak</th>\n","      <th>ST_Slope</th>\n","      <th>HeartDisease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>40</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>Normal</td>\n","      <td>172</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>F</td>\n","      <td>NAP</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>Normal</td>\n","      <td>156</td>\n","      <td>N</td>\n","      <td>1.0</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>ST</td>\n","      <td>98</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>48</td>\n","      <td>F</td>\n","      <td>ASY</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>Normal</td>\n","      <td>108</td>\n","      <td>Y</td>\n","      <td>1.5</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>54</td>\n","      <td>M</td>\n","      <td>NAP</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>Normal</td>\n","      <td>122</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>913</th>\n","      <td>45</td>\n","      <td>M</td>\n","      <td>TA</td>\n","      <td>110</td>\n","      <td>264</td>\n","      <td>Normal</td>\n","      <td>132</td>\n","      <td>N</td>\n","      <td>1.2</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>914</th>\n","      <td>68</td>\n","      <td>M</td>\n","      <td>ASY</td>\n","      <td>144</td>\n","      <td>193</td>\n","      <td>Normal</td>\n","      <td>141</td>\n","      <td>N</td>\n","      <td>3.4</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>915</th>\n","      <td>57</td>\n","      <td>M</td>\n","      <td>ASY</td>\n","      <td>130</td>\n","      <td>131</td>\n","      <td>Normal</td>\n","      <td>115</td>\n","      <td>Y</td>\n","      <td>1.2</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>916</th>\n","      <td>57</td>\n","      <td>F</td>\n","      <td>ATA</td>\n","      <td>130</td>\n","      <td>236</td>\n","      <td>LVH</td>\n","      <td>174</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>917</th>\n","      <td>38</td>\n","      <td>M</td>\n","      <td>NAP</td>\n","      <td>138</td>\n","      <td>175</td>\n","      <td>Normal</td>\n","      <td>173</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>918 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-513f8c00-a2ee-4d70-b887-1970f5c1a198')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-513f8c00-a2ee-4d70-b887-1970f5c1a198 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-513f8c00-a2ee-4d70-b887-1970f5c1a198');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9c167399-3864-486e-9671-189a342c0733\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c167399-3864-486e-9671-189a342c0733')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9c167399-3864-486e-9671-189a342c0733 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 918,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"NAP\",\n          \"TA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          165,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 109,\n        \"min\": 0,\n        \"max\": 603,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          305,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingECG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Normal\",\n          \"ST\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxHR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ExerciseAngina\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Y\",\n          \"N\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0665701510493233,\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST_Slope\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Up\",\n          \"Flat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HeartDisease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["dataset.fillna(method=\"ffill\",axis=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"HkZwE9saUpsG","executionInfo":{"status":"ok","timestamp":1761364450188,"user_tz":-330,"elapsed":99,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"97113d06-876e-478f-95ae-7f74d474e576"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-629923051.py:1: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n","  dataset.fillna(method=\"ffill\",axis=1)\n"]},{"output_type":"execute_result","data":{"text/plain":["    Age Sex ChestPainType RestingBP Cholesterol RestingECG MaxHR  \\\n","0    40   M           ATA       140         289     Normal   172   \n","1    49   F           NAP       160         180     Normal   156   \n","2    37   M           ATA       130         283         ST    98   \n","3    48   F           ASY       138         214     Normal   108   \n","4    54   M           NAP       150         195     Normal   122   \n","..   ..  ..           ...       ...         ...        ...   ...   \n","913  45   M            TA       110         264     Normal   132   \n","914  68   M           ASY       144         193     Normal   141   \n","915  57   M           ASY       130         131     Normal   115   \n","916  57   F           ATA       130         236        LVH   174   \n","917  38   M           NAP       138         175     Normal   173   \n","\n","    ExerciseAngina Oldpeak ST_Slope HeartDisease  \n","0                N     0.0       Up            0  \n","1                N     1.0     Flat            1  \n","2                N     0.0       Up            0  \n","3                Y     1.5     Flat            1  \n","4                N     0.0       Up            0  \n","..             ...     ...      ...          ...  \n","913              N     1.2     Flat            1  \n","914              N     3.4     Flat            1  \n","915              Y     1.2     Flat            1  \n","916              N     0.0     Flat            1  \n","917              N     0.0       Up            0  \n","\n","[918 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-f296e8e7-2a6c-4350-93b9-552c7d953bfb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>ChestPainType</th>\n","      <th>RestingBP</th>\n","      <th>Cholesterol</th>\n","      <th>RestingECG</th>\n","      <th>MaxHR</th>\n","      <th>ExerciseAngina</th>\n","      <th>Oldpeak</th>\n","      <th>ST_Slope</th>\n","      <th>HeartDisease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>40</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>Normal</td>\n","      <td>172</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>F</td>\n","      <td>NAP</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>Normal</td>\n","      <td>156</td>\n","      <td>N</td>\n","      <td>1.0</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>ST</td>\n","      <td>98</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>48</td>\n","      <td>F</td>\n","      <td>ASY</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>Normal</td>\n","      <td>108</td>\n","      <td>Y</td>\n","      <td>1.5</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>54</td>\n","      <td>M</td>\n","      <td>NAP</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>Normal</td>\n","      <td>122</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>913</th>\n","      <td>45</td>\n","      <td>M</td>\n","      <td>TA</td>\n","      <td>110</td>\n","      <td>264</td>\n","      <td>Normal</td>\n","      <td>132</td>\n","      <td>N</td>\n","      <td>1.2</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>914</th>\n","      <td>68</td>\n","      <td>M</td>\n","      <td>ASY</td>\n","      <td>144</td>\n","      <td>193</td>\n","      <td>Normal</td>\n","      <td>141</td>\n","      <td>N</td>\n","      <td>3.4</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>915</th>\n","      <td>57</td>\n","      <td>M</td>\n","      <td>ASY</td>\n","      <td>130</td>\n","      <td>131</td>\n","      <td>Normal</td>\n","      <td>115</td>\n","      <td>Y</td>\n","      <td>1.2</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>916</th>\n","      <td>57</td>\n","      <td>F</td>\n","      <td>ATA</td>\n","      <td>130</td>\n","      <td>236</td>\n","      <td>LVH</td>\n","      <td>174</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>917</th>\n","      <td>38</td>\n","      <td>M</td>\n","      <td>NAP</td>\n","      <td>138</td>\n","      <td>175</td>\n","      <td>Normal</td>\n","      <td>173</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>918 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f296e8e7-2a6c-4350-93b9-552c7d953bfb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f296e8e7-2a6c-4350-93b9-552c7d953bfb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f296e8e7-2a6c-4350-93b9-552c7d953bfb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-bb97b920-85e8-49ed-bccf-feaafc2337c1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb97b920-85e8-49ed-bccf-feaafc2337c1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-bb97b920-85e8-49ed-bccf-feaafc2337c1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 918,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"NAP\",\n          \"TA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingBP\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          165,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 603,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          305,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingECG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Normal\",\n          \"ST\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxHR\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ExerciseAngina\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Y\",\n          \"N\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Oldpeak\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST_Slope\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Up\",\n          \"Flat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HeartDisease\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":[],"metadata":{"id":"EU260kMBY0Qx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataset[\"Sex\"].mode()[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"YDOeYZYfY0UB","executionInfo":{"status":"ok","timestamp":1761278690955,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"7cbeed86-7b4e-433e-a29f-5fc591af606a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'M'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["dataset[\"Sex\"].fillna(dataset[\"Sex\"].mode()[0],inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7Z4Bhpx5YlZH","executionInfo":{"status":"ok","timestamp":1761364457214,"user_tz":-330,"elapsed":33,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"905df8b3-7794-4fb3-ff02-df13b00fb24b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-2768257328.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  dataset[\"Sex\"].fillna(dataset[\"Sex\"].mode()[0],inplace=True)\n"]}]},{"cell_type":"code","source":["dataset.select_dtypes(include=\"object\").isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"aqAzjjTsUpwm","executionInfo":{"status":"ok","timestamp":1761364458937,"user_tz":-330,"elapsed":64,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"b470e742-ad75-4be2-e79c-1f4d92e80dff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sex               0\n","ChestPainType     0\n","RestingECG        0\n","ExerciseAngina    0\n","ST_Slope          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ChestPainType</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>RestingECG</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ExerciseAngina</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ST_Slope</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["for i in dataset.select_dtypes(include=\"object\").columns:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gd0kAFgFZtuQ","executionInfo":{"status":"ok","timestamp":1761364460827,"user_tz":-330,"elapsed":41,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"f6ec9bc4-8920-44ad-9597-8be5a04ebe1a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Sex\n","ChestPainType\n","RestingECG\n","ExerciseAngina\n","ST_Slope\n"]}]},{"cell_type":"code","source":["for i in dataset.select_dtypes(include=\"object\").columns:\n","  dataset[i].fillna(dataset[i].mode()[0],inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M54D4laRUpzv","executionInfo":{"status":"ok","timestamp":1761364462493,"user_tz":-330,"elapsed":28,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"1572c95a-c181-464a-c21f-cb24248b0001"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-853905908.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  dataset[i].fillna(dataset[i].mode()[0],inplace=True)\n"]}]},{"cell_type":"code","source":["# how to fill data  in data set"],"metadata":{"id":"X_s9IcIaaZM4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataset.select_dtypes(include=\"object\").isnull().sum()"],"metadata":{"id":"sJXHgmuFaZP3","colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"status":"ok","timestamp":1761364464401,"user_tz":-330,"elapsed":20,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"b742803d-1e7c-4c4a-e1e8-09ce8cc2d7e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sex               0\n","ChestPainType     0\n","RestingECG        0\n","ExerciseAngina    0\n","ST_Slope          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ChestPainType</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>RestingECG</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ExerciseAngina</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ST_Slope</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["dataset.info()"],"metadata":{"id":"nSQxH-4yaZSv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1761370572312,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"ad0e2627-fe3e-4262-a253-f11516bcd5e0"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 918 entries, 0 to 917\n","Data columns (total 12 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   Age             918 non-null    int64  \n"," 1   Sex             918 non-null    object \n"," 2   ChestPainType   918 non-null    object \n"," 3   RestingBP       918 non-null    int64  \n"," 4   Cholesterol     918 non-null    int64  \n"," 5   FastingBS       918 non-null    int64  \n"," 6   RestingECG      918 non-null    object \n"," 7   MaxHR           918 non-null    int64  \n"," 8   ExerciseAngina  918 non-null    object \n"," 9   Oldpeak         918 non-null    float64\n"," 10  ST_Slope        918 non-null    object \n"," 11  HeartDisease    918 non-null    int64  \n","dtypes: float64(1), int64(6), object(5)\n","memory usage: 86.2+ KB\n"]}]},{"cell_type":"code","source":["dataset.select_dtypes(include=\"float64\").columns"],"metadata":{"id":"ol2DMQ7AaZWA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1761371009122,"user_tz":-330,"elapsed":22,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"7a135878-0fe6-40d5-82ec-22ab2027b7d0"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Oldpeak'], dtype='object')"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":[],"metadata":{"id":"dV3GbjaJ5ezf"}},{"cell_type":"code","source":["from sklearn.impute import SimpleImputer"],"metadata":{"id":"y83P09lK1rdb","executionInfo":{"status":"ok","timestamp":1761370591207,"user_tz":-330,"elapsed":730,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["['age', 'creatinine_phosphokinase', 'ejection_fraction', 'platelets',\n"," 'serum_creatinine', 'serum_sodium', 'time']\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c4b1WS-E1rf7","executionInfo":{"status":"ok","timestamp":1761371095298,"user_tz":-330,"elapsed":33,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"1fa6028e-68b8-4942-f647-2b0063af0439"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['age',\n"," 'creatinine_phosphokinase',\n"," 'ejection_fraction',\n"," 'platelets',\n"," 'serum_creatinine',\n"," 'serum_sodium',\n"," 'time']"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["for col in [\"Age\",\"creatinine_phosphokinase\",\"ejection_fraction\",\"platelets\",\n","            \"serum_creatinine\",\"serum_sodium\",\"time\"]:\n","    if col not in dataset.columns:\n","        print(\"Missing:\", col)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ktwxdogG50hO","executionInfo":{"status":"ok","timestamp":1761371311539,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"ae5d5b3a-6123-45eb-926c-6589d9cc69a8"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Missing: creatinine_phosphokinase\n","Missing: ejection_fraction\n","Missing: platelets\n","Missing: serum_creatinine\n","Missing: serum_sodium\n","Missing: time\n"]}]},{"cell_type":"code","source":["dataset.select_dtypes(include=\"float64\").columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r9UJCpY_50ma","executionInfo":{"status":"ok","timestamp":1761371407691,"user_tz":-330,"elapsed":18,"user":{"displayName":"Sumit Kumar Singh","userId":"17154719995655687467"}},"outputId":"06ec17e8-38a1-45ed-fb3f-948aa7a45443"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Oldpeak'], dtype='object')"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":[],"metadata":{"id":"-feVyUwC50qn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"bqMBCJ2V50sq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"l4JsY0zg50vG"},"execution_count":null,"outputs":[]}]}